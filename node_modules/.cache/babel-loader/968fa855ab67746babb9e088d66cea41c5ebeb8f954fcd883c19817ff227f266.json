{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dasam\\\\OneDrive\\\\Desktop\\\\Web development\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchData } from './utils';\nimport Board from \"./Components/Board/Board\";\nimport CustomDropdown from \"./Components/CustomDropdown\";\nimport Editable from \"./Components/Editabled/Editable\";\nimport \"./App.css\";\nfunction App() {\n  _s();\n  const [boards, setBoards] = useState([]);\n  const board = ['Backlog', 'Todo', 'In progress', 'Done', 'Cancelled'];\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\"\n  });\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupedUserTickets, setGroupedUserTickets] = useState({\n    'Backlog': [],\n    'Todo': [],\n    'In progress': [],\n    'Done': [],\n    'Cancelled': []\n  });\n  const [selectedGrouping, setSelectedGrouping] = useState('');\n  const [selectedOrdering, setSelectedOrdering] = useState('');\n  useEffect(() => {\n    fetchData().then(_ref => {\n      let {\n        tickets,\n        users\n      } = _ref;\n      console.log(\"Tickets:\", tickets);\n      console.log(\"Users:\", users);\n      setTickets(tickets);\n      setUsers(users);\n\n      // Group tickets dynamically based on selected grouping\n      let groupedTickets = {};\n      if (selectedGrouping === 'status') {\n        // Group by status\n        groupedTickets = tickets.reduce((grouped, ticket) => {\n          const status = ticket.status;\n          if (!grouped[status]) {\n            grouped[status] = [];\n          }\n          grouped[status].push(ticket);\n          return grouped;\n        }, {});\n      } else if (selectedGrouping === 'priority') {\n        // Group by priority\n        groupedTickets = tickets.reduce((grouped, ticket) => {\n          const priority = ticket.priority;\n          if (!grouped[priority]) {\n            grouped[priority] = [];\n          }\n          grouped[priority].push(ticket);\n          return grouped;\n        }, {});\n      } else if (selectedGrouping === 'user') {\n        // Group by user\n        groupedTickets = tickets.reduce((grouped, ticket) => {\n          const userId = ticket.userId;\n          if (!grouped[userId]) {\n            grouped[userId] = [];\n          }\n          grouped[userId].push(ticket);\n          return grouped;\n        }, {});\n      }\n      setGroupedUserTickets(groupedTickets);\n    });\n  }, [selectedGrouping]);\n  const handleGroupingChange = value => {\n    setSelectedGrouping(value);\n  };\n  const handleOrderingChange = value => {\n    setSelectedOrdering(value);\n  };\n  const addboardHandler = name => {\n    const tempBoards = [...boards];\n    tempBoards.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: []\n    });\n    setBoards(tempBoards);\n  };\n  const removeBoard = id => {\n    const index = boards.findIndex(item => item.id === id);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    tempBoards.splice(index, 1);\n    setBoards(tempBoards);\n  };\n  const addCardHandler = (id, title) => {\n    const index = boards.findIndex(item => item.id === id);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: []\n    });\n    setBoards(tempBoards);\n  };\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex(item => item.id === bid);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n    const cardIndex = cards.findIndex(item => item.id === cid);\n    if (cardIndex < 0) return;\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoards);\n  };\n  const dragEnded = (bid, cid) => {\n    var _boards$sourceBoardIn, _boards$sourceBoardIn2, _boards$destinationBo, _boards$destinationBo2;\n    const sourceBoardIndex = boards.findIndex(item => item.id === bid);\n    const sourceCardIndex = (_boards$sourceBoardIn = boards[sourceBoardIndex]) === null || _boards$sourceBoardIn === void 0 ? void 0 : (_boards$sourceBoardIn2 = _boards$sourceBoardIn.cards) === null || _boards$sourceBoardIn2 === void 0 ? void 0 : _boards$sourceBoardIn2.findIndex(item => item.id === cid);\n    const destinationBoardIndex = boards.findIndex(item => item.id === targetCard.bid);\n    const destinationCardIndex = (_boards$destinationBo = boards[destinationBoardIndex]) === null || _boards$destinationBo === void 0 ? void 0 : (_boards$destinationBo2 = _boards$destinationBo.cards) === null || _boards$destinationBo2 === void 0 ? void 0 : _boards$destinationBo2.findIndex(item => item.id === targetCard.cid);\n    if (sourceBoardIndex < 0 || sourceCardIndex < 0 || destinationBoardIndex < 0 || destinationCardIndex < 0) return;\n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[sourceBoardIndex].cards[sourceCardIndex];\n    tempBoards[sourceBoardIndex].cards.splice(sourceCardIndex, 1);\n    tempBoards[destinationBoardIndex].cards.splice(destinationCardIndex, 0, sourceCard);\n    setBoards(tempBoards);\n    setTargetCard({\n      bid: \"\",\n      cid: \"\"\n    });\n  };\n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({\n      bid,\n      cid\n    });\n  };\n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex(item => item.id === bid);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n    const cardIndex = cards.findIndex(item => item.id === cid);\n    if (cardIndex < 0) return;\n    tempBoards[index].cards[cardIndex] = card;\n    setBoards(tempBoards);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\n  }, [boards]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, \"Kanban Board\"), /*#__PURE__*/React.createElement(CustomDropdown, {\n    onGroupingChange: handleGroupingChange,\n    onOrderingChange: handleOrderingChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, \"lasd\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, \"Users:\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, JSON.stringify(users, null, 2))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, \"Grouped Tickets by User:\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, JSON.stringify(groupedUserTickets, null, 2))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, \"Selected Grouping: \", selectedGrouping), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, \"Selected Ordering: \", selectedOrdering))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_boards_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_boards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, boards.map(item => /*#__PURE__*/React.createElement(Board, {\n    key: item.id,\n    board: item,\n    addCard: addCardHandler,\n    removeBoard: () => removeBoard(item.id),\n    removeCard: removeCard,\n    dragEnded: dragEnded,\n    dragEntered: dragEntered,\n    updateCard: updateCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  })), Object.keys(groupedUserTickets).map(boardKey => /*#__PURE__*/React.createElement(Board, {\n    key: boardKey,\n    board: {\n      id: boardKey,\n      title: boardKey,\n      cards: groupedUserTickets[boardKey]\n    },\n    addCard: addCardHandler,\n    removeBoard: () => removeBoard(boardKey),\n    removeCard: removeCard,\n    dragEnded: dragEnded,\n    dragEntered: dragEntered,\n    updateCard: updateCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_boards_last\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Editable, {\n    displayClass: \"app_boards_add-board\",\n    editClass: \"app_boards_add-board_edit\",\n    placeholder: \"Enter Board Name\",\n    text: \"Add Board\",\n    buttonText: \"Add Board\",\n    onSubmit: addboardHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }))))));\n}\n_s(App, \"H/wzLAhU75/+jm5BQ47ZklzYMl4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchData","Board","CustomDropdown","Editable","App","_s","boards","setBoards","board","targetCard","setTargetCard","bid","cid","tickets","setTickets","users","setUsers","groupedUserTickets","setGroupedUserTickets","selectedGrouping","setSelectedGrouping","selectedOrdering","setSelectedOrdering","then","_ref","console","log","groupedTickets","reduce","grouped","ticket","status","push","priority","userId","handleGroupingChange","value","handleOrderingChange","addboardHandler","name","tempBoards","id","Date","now","Math","random","title","cards","removeBoard","index","findIndex","item","splice","addCardHandler","labels","date","tasks","removeCard","cardIndex","dragEnded","_boards$sourceBoardIn","_boards$sourceBoardIn2","_boards$destinationBo","_boards$destinationBo2","sourceBoardIndex","sourceCardIndex","destinationBoardIndex","destinationCardIndex","sourceCard","dragEntered","updateCard","card","localStorage","setItem","JSON","stringify","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onGroupingChange","onOrderingChange","map","key","addCard","Object","keys","boardKey","displayClass","editClass","placeholder","text","buttonText","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/dasam/OneDrive/Desktop/Web development/my-react-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchData } from './utils';\n\nimport Board from \"./Components/Board/Board\";\nimport CustomDropdown from \"./Components/CustomDropdown\";\nimport Editable from \"./Components/Editabled/Editable\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [boards, setBoards] = useState(\n     []\n  );\n  const board = ['Backlog', 'Todo', 'In progress', 'Done', 'Cancelled'];\n\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\",\n  });\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupedUserTickets, setGroupedUserTickets] = useState({\n    'Backlog': [],\n    'Todo': [],\n    'In progress': [],\n    'Done': [],\n    'Cancelled': [],\n  });\n  const [selectedGrouping, setSelectedGrouping] = useState('');\n  const [selectedOrdering, setSelectedOrdering] = useState('');\n\n  useEffect(() => {\n  fetchData().then(({ tickets, users }) => {\n    console.log(\"Tickets:\", tickets);\n    console.log(\"Users:\", users);\n    setTickets(tickets);\n    setUsers(users);\n\n    // Group tickets dynamically based on selected grouping\n    let groupedTickets = {};\n    if (selectedGrouping === 'status') {\n      // Group by status\n      groupedTickets = tickets.reduce((grouped, ticket) => {\n        const status = ticket.status;\n        if (!grouped[status]) {\n          grouped[status] = [];\n        }\n        grouped[status].push(ticket);\n        return grouped;\n      }, {});\n    } else if (selectedGrouping === 'priority') {\n      // Group by priority\n      groupedTickets = tickets.reduce((grouped, ticket) => {\n        const priority = ticket.priority;\n        if (!grouped[priority]) {\n          grouped[priority] = [];\n        }\n        grouped[priority].push(ticket);\n        return grouped;\n      }, {});\n    } else if (selectedGrouping === 'user') {\n      // Group by user\n      groupedTickets = tickets.reduce((grouped, ticket) => {\n        const userId = ticket.userId;\n        if (!grouped[userId]) {\n          grouped[userId] = [];\n        }\n        grouped[userId].push(ticket);\n        return grouped;\n      }, {});\n    }\n\n    setGroupedUserTickets(groupedTickets);\n  });\n}, [selectedGrouping]);\n\n\n  const handleGroupingChange = (value) => {\n    setSelectedGrouping(value);\n  };\n\n  const handleOrderingChange = (value) => {\n    setSelectedOrdering(value);\n  };\n\n  const addboardHandler = (name) => {\n    const tempBoards = [...boards];\n    tempBoards.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: [],\n    });\n    setBoards(tempBoards);\n  };\n\n  const removeBoard = (id) => {\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    tempBoards.splice(index, 1);\n    setBoards(tempBoards);\n  };\n\n  const addCardHandler = (id, title) => {\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: [],\n    });\n    setBoards(tempBoards);\n  };\n\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoards);\n  };\n\n  const dragEnded = (bid, cid) => {\n    const sourceBoardIndex = boards.findIndex((item) => item.id === bid);\n    const sourceCardIndex = boards[sourceBoardIndex]?.cards?.findIndex((item) => item.id === cid);\n  \n    const destinationBoardIndex = boards.findIndex((item) => item.id === targetCard.bid);\n    const destinationCardIndex = boards[destinationBoardIndex]?.cards?.findIndex((item) => item.id === targetCard.cid);\n  \n    if (sourceBoardIndex < 0 || sourceCardIndex < 0 || destinationBoardIndex < 0 || destinationCardIndex < 0) return;\n  \n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[sourceBoardIndex].cards[sourceCardIndex];\n    tempBoards[sourceBoardIndex].cards.splice(sourceCardIndex, 1);\n    tempBoards[destinationBoardIndex].cards.splice(destinationCardIndex, 0, sourceCard);\n  \n    setBoards(tempBoards);\n    setTargetCard({ bid: \"\", cid: \"\" });\n  };\n  \n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({ bid, cid });\n  };\n  \n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    tempBoards[index].cards[cardIndex] = card;\n\n    setBoards(tempBoards);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\n  }, [boards]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_nav\">\n        <h1>Kanban Board</h1>\n        <CustomDropdown\n          onGroupingChange={handleGroupingChange}\n          onOrderingChange={handleOrderingChange}\n        />\n        <h2>lasd</h2>\n        {/* Display tickets and users data here */}\n        <div>\n          <div>\n            <h3>Users:</h3>\n            <pre>{JSON.stringify(users, null, 2)}</pre>\n          </div>\n          <div>\n            <h3>Grouped Tickets by User:</h3>\n            <pre>{JSON.stringify(groupedUserTickets, null, 2)}</pre>\n          </div>\n          <div>\n            <h3>Selected Grouping: {selectedGrouping}</h3>\n            <h3>Selected Ordering: {selectedOrdering}</h3>\n          </div>\n        </div>\n        <div className=\"app_boards_container\">\n          <div className=\"app_boards\">\n            {boards.map((item) => (\n              <Board\n                key={item.id}\n                board={item}\n                addCard={addCardHandler}\n                removeBoard={() => removeBoard(item.id)}\n                removeCard={removeCard}\n                dragEnded={dragEnded}\n                dragEntered={dragEntered}\n                updateCard={updateCard}\n              />\n            ))}\n            {Object.keys(groupedUserTickets).map((boardKey) => (\n              <Board\n                key={boardKey}\n                board={{\n                  id: boardKey,\n                  title: boardKey,\n                  cards: groupedUserTickets[boardKey],\n                }}\n                addCard={addCardHandler}\n                removeBoard={() => removeBoard(boardKey)}\n                removeCard={removeCard}\n                dragEnded={dragEnded}\n                dragEntered={dragEntered}\n                updateCard={updateCard}\n              />\n            ))}\n            <div className=\"app_boards_last\">\n            <Editable\n              displayClass=\"app_boards_add-board\"\n              editClass=\"app_boards_add-board_edit\"\n              placeholder=\"Enter Board Name\"\n              text=\"Add Board\"\n              buttonText=\"Add Board\"\n              onSubmit={addboardHandler}\n            />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}