{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dasam\\\\OneDrive\\\\Desktop\\\\Web development\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchData } from './utils';\nimport Board from \"./Components/Board/Board\";\nimport \"./App.css\";\nimport Editable from \"./Components/Editabled/Editable\";\nimport Edit from \"./Components/Editabled/Edit\";\nfunction App() {\n  _s();\n  const [boards, setBoards] = useState(JSON.parse(localStorage.getItem(\"prac-kanban\")) || []);\n  const board = ['Backlog', 'Todo', 'In progress', 'Done', 'Cancelled'];\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\"\n  });\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupedUserTickets, setGroupedUserTickets] = useState({}); // Add this line\n\n  useEffect(() => {\n    fetchData().then(_ref => {\n      let {\n        tickets,\n        users\n      } = _ref;\n      console.log(\"Tickets:\", tickets);\n      console.log(\"Users:\", users);\n      setTickets(tickets);\n      setUsers(users);\n\n      // Group tickets by user\n      const groupedTicketsByUser = tickets.reduce((grouped, ticket) => {\n        const status = ticket.status;\n        if (!grouped[status]) {\n          grouped[status] = [];\n        }\n        grouped[status].push(ticket);\n        return grouped;\n      }, {});\n      setGroupedUserTickets(groupedTicketsByUser);\n    });\n  }, []);\n  const addboardHandler = name => {\n    const tempBoards = [...boards];\n    tempBoards.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: []\n    });\n    setBoards(tempBoards);\n  };\n  const removeBoard = id => {\n    const index = boards.findIndex(item => item.id === id);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    tempBoards.splice(index, 1);\n    setBoards(tempBoards);\n  };\n  const addCardHandler = (id, title) => {\n    const index = boards.findIndex(item => item.id === id);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: []\n    });\n    setBoards(tempBoards);\n  };\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex(item => item.id === bid);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n    const cardIndex = cards.findIndex(item => item.id === cid);\n    if (cardIndex < 0) return;\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoards);\n  };\n  const dragEnded = (bid, cid) => {\n    var _boards$s_boardIndex, _boards$s_boardIndex$, _boards$t_boardIndex, _boards$t_boardIndex$;\n    let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\n    s_boardIndex = boards.findIndex(item => item.id === bid);\n    if (s_boardIndex < 0) return;\n    s_cardIndex = (_boards$s_boardIndex = boards[s_boardIndex]) === null || _boards$s_boardIndex === void 0 ? void 0 : (_boards$s_boardIndex$ = _boards$s_boardIndex.cards) === null || _boards$s_boardIndex$ === void 0 ? void 0 : _boards$s_boardIndex$.findIndex(item => item.id === cid);\n    if (s_cardIndex < 0) return;\n    t_boardIndex = boards.findIndex(item => item.id === targetCard.bid);\n    if (t_boardIndex < 0) return;\n    t_cardIndex = (_boards$t_boardIndex = boards[t_boardIndex]) === null || _boards$t_boardIndex === void 0 ? void 0 : (_boards$t_boardIndex$ = _boards$t_boardIndex.cards) === null || _boards$t_boardIndex$ === void 0 ? void 0 : _boards$t_boardIndex$.findIndex(item => item.id === targetCard.cid);\n    if (t_cardIndex < 0) return;\n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\n    tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\n    tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\n    setBoards(tempBoards);\n    setTargetCard({\n      bid: \"\",\n      cid: \"\"\n    });\n  };\n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({\n      bid,\n      cid\n    });\n  };\n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex(item => item.id === bid);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n    const cardIndex = cards.findIndex(item => item.id === cid);\n    if (cardIndex < 0) return;\n    tempBoards[index].cards[cardIndex] = card;\n    setBoards(tempBoards);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\n  }, [boards]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, \"Kanban Board\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, \"lasd\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, \"Users:\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, JSON.stringify(users, null, 2))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, \"Grouped Tickets by User:\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, JSON.stringify(groupedUserTickets, null, 2)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_boards_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_boards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, boards.map(item => /*#__PURE__*/React.createElement(Board, {\n    key: item.id,\n    board: item,\n    addCard: addCardHandler,\n    removeBoard: () => removeBoard(item.id),\n    removeCard: removeCard,\n    dragEnded: dragEnded,\n    dragEntered: dragEntered,\n    updateCard: updateCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_boards_last\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, board.map((boardName, index) => /*#__PURE__*/React.createElement(Editable, {\n    key: index,\n    displayClass: \"app_boards_add-board \".concat(boardName.toLowerCase()),\n    editClass: \"app_boards_add-board_edit \".concat(boardName.toLowerCase()),\n    placeholder: \"Enter \".concat(boardName, \" Name\"),\n    text: boardName,\n    buttonText: boardName,\n    onSubmit: name => addboardHandler(name, boardName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Editable, {\n    displayClass: \"app_boards_add-board\",\n    editClass: \"app_boards_add-board_edit\",\n    placeholder: \"Enter Board Name\",\n    text: \"Add Board\",\n    buttonText: \"Add Board\",\n    onSubmit: addboardHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }))))));\n}\n_s(App, \"D9WmyG6YY++rbR5aRJw2XhEBINc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchData","Board","Editable","Edit","App","_s","boards","setBoards","JSON","parse","localStorage","getItem","board","targetCard","setTargetCard","bid","cid","tickets","setTickets","users","setUsers","groupedUserTickets","setGroupedUserTickets","then","_ref","console","log","groupedTicketsByUser","reduce","grouped","ticket","status","push","addboardHandler","name","tempBoards","id","Date","now","Math","random","title","cards","removeBoard","index","findIndex","item","splice","addCardHandler","labels","date","tasks","removeCard","cardIndex","dragEnded","_boards$s_boardIndex","_boards$s_boardIndex$","_boards$t_boardIndex","_boards$t_boardIndex$","s_boardIndex","s_cardIndex","t_boardIndex","t_cardIndex","sourceCard","dragEntered","updateCard","card","setItem","stringify","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","addCard","boardName","displayClass","concat","toLowerCase","editClass","placeholder","text","buttonText","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/dasam/OneDrive/Desktop/Web development/my-react-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchData } from './utils';\n\nimport Board from \"./Components/Board/Board\";\n\nimport \"./App.css\";\nimport Editable from \"./Components/Editabled/Editable\";\nimport Edit from \"./Components/Editabled/Edit\";\n\n\n\n\nfunction App() {\n\n  const [boards, setBoards] = useState(\n    JSON.parse(localStorage.getItem(\"prac-kanban\")) || []\n  );\n  const board=[ 'Backlog', 'Todo', 'In progress', 'Done', 'Cancelled']\n\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\",\n  });\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupedUserTickets, setGroupedUserTickets] = useState({}); // Add this line\n\n  useEffect(() => {\n    fetchData().then(({ tickets, users }) => {\n      console.log(\"Tickets:\", tickets);\n      console.log(\"Users:\", users);\n      setTickets(tickets);\n      setUsers(users);\n  \n      // Group tickets by user\n      const groupedTicketsByUser = tickets.reduce((grouped, ticket) => {\n        const status = ticket.status;\n        if (!grouped[status]) {\n          grouped[status] = [];\n        }\n        grouped[status].push(ticket);\n        return grouped;\n      }, {});\n      setGroupedUserTickets(groupedTicketsByUser);\n    });\n  }, []);\n\n  const addboardHandler = (name) => {\n    const tempBoards = [...boards];\n    tempBoards.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: [],\n    });\n    setBoards(tempBoards);\n  };\n\n\n  const removeBoard = (id) => {\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    tempBoards.splice(index, 1);\n    setBoards(tempBoards);\n  };\n\n  const addCardHandler = (id, title) => {\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: [],\n    });\n    setBoards(tempBoards);\n  };\n\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoards);\n  };\n\n  const dragEnded = (bid, cid) => {\n    let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\n    s_boardIndex = boards.findIndex((item) => item.id === bid);\n    if (s_boardIndex < 0) return;\n\n    s_cardIndex = boards[s_boardIndex]?.cards?.findIndex(\n      (item) => item.id === cid\n    );\n    if (s_cardIndex < 0) return;\n\n    t_boardIndex = boards.findIndex((item) => item.id === targetCard.bid);\n    if (t_boardIndex < 0) return;\n\n    t_cardIndex = boards[t_boardIndex]?.cards?.findIndex(\n      (item) => item.id === targetCard.cid\n    );\n    if (t_cardIndex < 0) return;\n\n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\n    tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\n    tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\n    setBoards(tempBoards);\n\n    setTargetCard({\n      bid: \"\",\n      cid: \"\",\n    });\n  };\n\n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({\n      bid,\n      cid,\n    });\n  };\n\n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    tempBoards[index].cards[cardIndex] = card;\n\n    setBoards(tempBoards);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\n  }, [boards]);\n\n  return (\n    <div className=\"app\">\n  <div className=\"app_nav\">\n    <h1>Kanban Board</h1>\n    <h2>lasd</h2>\n    {/* Display tickets and users data here */}\n    <div>\n      <div>\n        <h3>Users:</h3>\n        <pre>{JSON.stringify(users, null, 2)}</pre>\n      </div>\n      <div>\n        <h3>Grouped Tickets by User:</h3>\n        <pre>{JSON.stringify(groupedUserTickets, null, 2)}</pre>\n      </div>\n    </div>\n    <div className=\"app_boards_container\">\n      <div className=\"app_boards\">\n        {boards.map((item) => (\n          <Board\n            key={item.id}\n            board={item}\n            addCard={addCardHandler}\n            removeBoard={() => removeBoard(item.id)}\n            removeCard={removeCard}\n            dragEnded={dragEnded}\n            dragEntered={dragEntered}\n            updateCard={updateCard}\n          />\n        ))}\n        <div className=\"app_boards_last\">\n        {board.map((boardName, index) => (\n        <Editable\n          key={index}\n          displayClass={`app_boards_add-board ${boardName.toLowerCase()}`}\n          editClass={`app_boards_add-board_edit ${boardName.toLowerCase()}`}\n          placeholder={`Enter ${boardName} Name`}\n          text={boardName}\n          buttonText={boardName}\n          onSubmit={(name) => addboardHandler(name, boardName)}\n        />\n      ))}\n          <Editable\n            displayClass=\"app_boards_add-board\"\n            editClass=\"app_boards_add-board_edit\"\n            placeholder=\"Enter Board Name\"\n            text=\"Add Board\"\n            buttonText=\"Add Board\"\n            onSubmit={addboardHandler}\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}