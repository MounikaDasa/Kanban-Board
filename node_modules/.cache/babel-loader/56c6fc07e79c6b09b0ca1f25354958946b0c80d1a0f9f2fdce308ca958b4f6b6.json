{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dasam\\\\OneDrive\\\\Desktop\\\\Web development\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchData } from './utils';\nimport Board from \"./Components/Board/Board\";\nimport CustomDropdown from \"./Components/CustomDropdown\";\nimport Editable from \"./Components/Editabled/Editable\";\nimport \"./App.css\";\nfunction App() {\n  _s();\n  const [boards, setBoards] = useState([]);\n  const board = ['Backlog', 'Todo', 'In progress', 'Done', 'Cancelled'];\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\"\n  });\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupedUserTickets, setGroupedUserTickets] = useState({\n    'Backlog': [],\n    'Todo': [],\n    'In progress': [],\n    'Done': [],\n    'Cancelled': []\n  });\n  const [selectedGrouping, setSelectedGrouping] = useState('');\n  const [selectedOrdering, setSelectedOrdering] = useState('');\n  useEffect(() => {\n    fetchData().then(_ref => {\n      let {\n        tickets,\n        users\n      } = _ref;\n      setTickets(tickets);\n      setUsers(users);\n\n      // Group tickets dynamically based on selected grouping\n      let groupedTickets = {};\n      if (selectedGrouping === 'status') {\n        // Group by status\n        groupedTickets = tickets.reduce((grouped, ticket) => {\n          const status = ticket.status;\n          if (!grouped[status]) {\n            grouped[status] = [];\n          }\n          grouped[status].push(ticket);\n          return grouped;\n        }, {});\n      } else if (selectedGrouping === 'priority') {\n        // Group by priority\n        groupedTickets = tickets.reduce((grouped, ticket) => {\n          const priority = ticket.priority;\n          if (!grouped[priority]) {\n            grouped[priority] = [];\n          }\n          grouped[priority].push(ticket);\n          return grouped;\n        }, {});\n      } else if (selectedGrouping === 'user') {\n        // Group by user\n        groupedTickets = tickets.reduce((grouped, ticket) => {\n          const userId = ticket.userId;\n          if (!grouped[userId]) {\n            grouped[userId] = [];\n          }\n          grouped[userId].push(ticket);\n          return grouped;\n        }, {});\n      }\n      setGroupedUserTickets(groupedTickets);\n    });\n  }, [selectedGrouping]);\n  const handleGroupingChange = value => {\n    setSelectedGrouping(value);\n  };\n  const handleOrderingChange = value => {\n    setSelectedOrdering(value);\n  };\n  const addboardHandler = name => {\n    const tempBoards = [...boards];\n    tempBoards.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: []\n    });\n    setBoards(tempBoards);\n  };\n  const removeBoard = id => {\n    const index = boards.findIndex(item => item.id === id);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    tempBoards.splice(index, 1);\n    setBoards(tempBoards);\n  };\n  const addCardHandler = (id, title) => {\n    console.log(boards);\n    const index = boards.findIndex(item => item.id === id);\n    if (index < 0) return;\n    console.log(\"triggered add card\");\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: []\n    });\n    setBoards(tempBoards);\n  };\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex(item => item.id === bid);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n    const cardIndex = cards.findIndex(item => item.id === cid);\n    if (cardIndex < 0) return;\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoards);\n  };\n  const dragEnded = (bid, cid) => {\n    var _boards$s_boardIndex, _boards$s_boardIndex$, _boards$t_boardIndex, _boards$t_boardIndex$;\n    let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\n    s_boardIndex = boards.findIndex(item => item.id === bid);\n    if (s_boardIndex < 0) return;\n    s_cardIndex = (_boards$s_boardIndex = boards[s_boardIndex]) === null || _boards$s_boardIndex === void 0 ? void 0 : (_boards$s_boardIndex$ = _boards$s_boardIndex.cards) === null || _boards$s_boardIndex$ === void 0 ? void 0 : _boards$s_boardIndex$.findIndex(item => item.id === cid);\n    if (s_cardIndex < 0) return;\n    t_boardIndex = boards.findIndex(item => item.id === targetCard.bid);\n    if (t_boardIndex < 0) return;\n    t_cardIndex = (_boards$t_boardIndex = boards[t_boardIndex]) === null || _boards$t_boardIndex === void 0 ? void 0 : (_boards$t_boardIndex$ = _boards$t_boardIndex.cards) === null || _boards$t_boardIndex$ === void 0 ? void 0 : _boards$t_boardIndex$.findIndex(item => item.id === targetCard.cid);\n    if (t_cardIndex < 0) return;\n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\n    tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\n    tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\n    setBoards(tempBoards);\n    setTargetCard({\n      bid: \"\",\n      cid: \"\"\n    });\n  };\n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({\n      bid,\n      cid\n    });\n  };\n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex(item => item.id === bid);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n    const cardIndex = cards.findIndex(item => item.id === cid);\n    if (cardIndex < 0) return;\n    tempBoards[index].cards[cardIndex] = card;\n    setBoards(tempBoards);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\n  }, [boards]);\n  useEffect(() => {\n    // Call addboardHandler for each boardKey after the initial render\n    console.log(\"here\" + groupedUserTickets);\n    Object.keys(groupedUserTickets).forEach(boardKey => {\n      addboardHandler(boardKey);\n    });\n  }, [groupedUserTickets]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, \"Kanban Board\"), /*#__PURE__*/React.createElement(CustomDropdown, {\n    onGroupingChange: handleGroupingChange,\n    onOrderingChange: handleOrderingChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, \"lasd\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"Selected Grouping: \", selectedGrouping), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, \"Selected Ordering: \", selectedOrdering))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_boards_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_boards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, boards.map(item => /*#__PURE__*/React.createElement(Board, {\n    key: item.id,\n    board: item,\n    addCard: addCardHandler,\n    removeBoard: () => removeBoard(item.id),\n    removeCard: removeCard,\n    dragEnded: dragEnded,\n    dragEntered: dragEntered,\n    updateCard: updateCard,\n    addBoard: addboardHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  })), Object.keys(groupedUserTickets).map(boardKey => /*#__PURE__*/React.createElement(Board, {\n    key: boardKey,\n    board: {\n      id: boardKey,\n      title: boardKey,\n      cards: groupedUserTickets[boardKey]\n    },\n    addCard: addCardHandler,\n    removeBoard: () => removeBoard(boardKey),\n    removeCard: removeCard,\n    dragEnded: dragEnded,\n    dragEntered: dragEntered,\n    updateCard: updateCard,\n    addBoard: addboardHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_boards_last\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Editable, {\n    displayClass: \"app_boards_add-board\",\n    editClass: \"app_boards_add-board_edit\",\n    placeholder: \"Enter Board Name\",\n    text: \"Add Board\",\n    buttonText: \"Add Board\",\n    onSubmit: addboardHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }))))));\n}\n_s(App, \"MyWgUEWANvtpvdREeHGyrri3Oic=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchData","Board","CustomDropdown","Editable","App","_s","boards","setBoards","board","targetCard","setTargetCard","bid","cid","tickets","setTickets","users","setUsers","groupedUserTickets","setGroupedUserTickets","selectedGrouping","setSelectedGrouping","selectedOrdering","setSelectedOrdering","then","_ref","groupedTickets","reduce","grouped","ticket","status","push","priority","userId","handleGroupingChange","value","handleOrderingChange","addboardHandler","name","tempBoards","id","Date","now","Math","random","title","cards","removeBoard","index","findIndex","item","splice","addCardHandler","console","log","labels","date","tasks","removeCard","cardIndex","dragEnded","_boards$s_boardIndex","_boards$s_boardIndex$","_boards$t_boardIndex","_boards$t_boardIndex$","s_boardIndex","s_cardIndex","t_boardIndex","t_cardIndex","sourceCard","dragEntered","updateCard","card","localStorage","setItem","JSON","stringify","Object","keys","forEach","boardKey","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onGroupingChange","onOrderingChange","map","key","addCard","addBoard","displayClass","editClass","placeholder","text","buttonText","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/dasam/OneDrive/Desktop/Web development/my-react-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchData } from './utils';\n\nimport Board from \"./Components/Board/Board\";\nimport CustomDropdown from \"./Components/CustomDropdown\";\nimport Editable from \"./Components/Editabled/Editable\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [boards, setBoards] = useState(\n     []\n  );\n  const board = ['Backlog', 'Todo', 'In progress', 'Done', 'Cancelled'];\n\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\",\n  });\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupedUserTickets, setGroupedUserTickets] = useState({\n    'Backlog': [],\n    'Todo': [],\n    'In progress': [],\n    'Done': [],\n    'Cancelled': [],\n  });\n  const [selectedGrouping, setSelectedGrouping] = useState('');\n  const [selectedOrdering, setSelectedOrdering] = useState('');\n\n  useEffect(() => {\n  fetchData().then(({ tickets, users }) => {\n  \n    setTickets(tickets);\n    setUsers(users);\n\n    // Group tickets dynamically based on selected grouping\n    let groupedTickets = {};\n    if (selectedGrouping === 'status') {\n      // Group by status\n      groupedTickets = tickets.reduce((grouped, ticket) => {\n        const status = ticket.status;\n        if (!grouped[status]) {\n          grouped[status] = [];\n        }\n        grouped[status].push(ticket);\n        return grouped;\n      }, {});\n    } else if (selectedGrouping === 'priority') {\n      // Group by priority\n      groupedTickets = tickets.reduce((grouped, ticket) => {\n        const priority = ticket.priority;\n        if (!grouped[priority]) {\n          grouped[priority] = [];\n        }\n        grouped[priority].push(ticket);\n        return grouped;\n      }, {});\n    } else if (selectedGrouping === 'user') {\n      // Group by user\n      groupedTickets = tickets.reduce((grouped, ticket) => {\n        const userId = ticket.userId;\n        if (!grouped[userId]) {\n          grouped[userId] = [];\n        }\n        grouped[userId].push(ticket);\n        return grouped;\n      }, {});\n    }\n\n    setGroupedUserTickets(groupedTickets);\n  });\n}, [selectedGrouping]);\n\n\n  const handleGroupingChange = (value) => {\n    setSelectedGrouping(value);\n  };\n\n  const handleOrderingChange = (value) => {\n    setSelectedOrdering(value);\n  };\n\n  const addboardHandler = (name) => {\n    const tempBoards = [...boards];\n    tempBoards.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: [],\n    });\n    setBoards(tempBoards);\n  };\n  \n\n  const removeBoard = (id) => {\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    tempBoards.splice(index, 1);\n    setBoards(tempBoards);\n  };\n\n  const addCardHandler = (id, title) => {\n    console.log(boards)\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n    console.log(\"triggered add card\")\n\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: [],\n    });\n    setBoards(tempBoards);\n  };\n\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoards);\n  };\n\n  const dragEnded = (bid, cid) => {\n    let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\n    s_boardIndex = boards.findIndex((item) => item.id === bid);\n    if (s_boardIndex < 0) return;\n\n    s_cardIndex = boards[s_boardIndex]?.cards?.findIndex(\n      (item) => item.id === cid\n    );\n    if (s_cardIndex < 0) return;\n\n    t_boardIndex = boards.findIndex((item) => item.id === targetCard.bid);\n    if (t_boardIndex < 0) return;\n\n    t_cardIndex = boards[t_boardIndex]?.cards?.findIndex(\n      (item) => item.id === targetCard.cid\n    );\n    if (t_cardIndex < 0) return;\n\n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\n    tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\n    tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\n    setBoards(tempBoards);\n\n    setTargetCard({\n      bid: \"\",\n      cid: \"\",\n    });\n  };\n\n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({\n      bid,\n      cid,\n    });\n  };\n\n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    tempBoards[index].cards[cardIndex] = card;\n\n    setBoards(tempBoards);\n  };\n \n\n  useEffect(() => {\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\n  }, [boards]);\n  useEffect(() => {\n    // Call addboardHandler for each boardKey after the initial render\n    console.log(\"here\"+groupedUserTickets)\n    Object.keys(groupedUserTickets).forEach((boardKey) => {\n      addboardHandler(boardKey);\n    });\n  }, [groupedUserTickets]);\n  \n\n  return (\n    <div className=\"app\">\n      <div className=\"app_nav\">\n        <h1>Kanban Board</h1>\n        <CustomDropdown\n          onGroupingChange={handleGroupingChange}\n          onOrderingChange={handleOrderingChange}\n        />\n        <h2>lasd</h2>\n        {/* Display tickets and users data here */}\n        <div>\n          \n          <div>\n            <h3>Selected Grouping: {selectedGrouping}</h3>\n            <h3>Selected Ordering: {selectedOrdering}</h3>\n          </div>\n        </div>\n        <div className=\"app_boards_container\">\n          <div className=\"app_boards\">\n            {boards.map((item) => (\n              <Board\n                key={item.id}\n                board={item}\n                addCard={addCardHandler}\n                removeBoard={() => removeBoard(item.id)}\n                removeCard={removeCard}\n                dragEnded={dragEnded}\n                dragEntered={dragEntered}\n                updateCard={updateCard}\n                addBoard={addboardHandler}\n              />\n            ))}\n           \n            \n            \n            {Object.keys(groupedUserTickets).map((boardKey) => (\n              \n              \n              <Board\n                key={boardKey}\n                board={{\n                  id: boardKey,\n                  title: boardKey,\n                  cards: groupedUserTickets[boardKey],\n                }}\n                addCard={addCardHandler}\n                removeBoard={() => removeBoard(boardKey)}\n                removeCard={removeCard}\n                dragEnded={dragEnded}\n                dragEntered={dragEntered}\n                updateCard={updateCard}\n                addBoard={addboardHandler}\n              />\n            ))}\n            <div className=\"app_boards_last\">\n            <Editable\n              displayClass=\"app_boards_add-board\"\n              editClass=\"app_boards_add-board_edit\"\n              placeholder=\"Enter Board Name\"\n              text=\"Add Board\"\n              buttonText=\"Add Board\"\n              onSubmit={addboardHandler}\n            />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}