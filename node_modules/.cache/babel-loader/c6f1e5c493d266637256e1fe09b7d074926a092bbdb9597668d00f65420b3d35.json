{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dasam\\\\OneDrive\\\\Desktop\\\\Web development\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchData } from './utils';\nimport Board from \"./Components/Board/Board\";\nimport \"./App.css\";\nimport Editable from \"./Components/Editabled/Editable\";\nimport Edit from \"./Components/Editabled/Edit\";\nimport CustomDropdown from \"./Components/CustomDropdown\";\nfunction App() {\n  _s();\n  const [boards, setBoards] = useState(JSON.parse(localStorage.getItem(\"prac-kanban\")) || []);\n  const board = ['Backlog', 'Todo', 'In progress', 'Done', 'Cancelled'];\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\"\n  });\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupedUserTickets, setGroupedUserTickets] = useState({\n    'Backlog': [],\n    'Todo': [],\n    'In progress': [],\n    'Done': [],\n    'Cancelled': []\n  });\n  useEffect(() => {\n    fetchData().then(_ref => {\n      let {\n        tickets,\n        users\n      } = _ref;\n      console.log(\"Tickets:\", tickets);\n      console.log(\"Users:\", users);\n      setTickets(tickets);\n      setUsers(users);\n\n      // Group tickets by user\n      const groupedTicketsByUser = tickets.reduce((grouped, ticket) => {\n        const status = ticket.status;\n        if (!grouped[status]) {\n          grouped[status] = [];\n        }\n        grouped[status].push(ticket);\n        return grouped;\n      }, {});\n      setGroupedUserTickets(groupedTicketsByUser);\n    });\n  }, []);\n  const [selectedGrouping, setSelectedGrouping] = useState('');\n  const [selectedOrdering, setSelectedOrdering] = useState('');\n  const handleGroupingChange = value => {\n    setSelectedGrouping(value);\n  };\n  const handleOrderingChange = value => {\n    setSelectedOrdering(value);\n  };\n  const addboardHandler = name => {\n    const tempBoards = [...boards];\n    tempBoards.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: []\n    });\n    setBoards(tempBoards);\n  };\n  const removeBoard = id => {\n    const index = boards.findIndex(item => item.id === id);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    tempBoards.splice(index, 1);\n    setBoards(tempBoards);\n  };\n  const addCardHandler = (id, title) => {\n    const index = boards.findIndex(item => item.id === id);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: []\n    });\n    setBoards(tempBoards);\n  };\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex(item => item.id === bid);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n    const cardIndex = cards.findIndex(item => item.id === cid);\n    if (cardIndex < 0) return;\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoards);\n  };\n  const dragEnded = (bid, cid) => {\n    var _boards$s_boardIndex, _boards$s_boardIndex$, _boards$t_boardIndex, _boards$t_boardIndex$;\n    let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\n    s_boardIndex = boards.findIndex(item => item.id === bid);\n    if (s_boardIndex < 0) return;\n    s_cardIndex = (_boards$s_boardIndex = boards[s_boardIndex]) === null || _boards$s_boardIndex === void 0 ? void 0 : (_boards$s_boardIndex$ = _boards$s_boardIndex.cards) === null || _boards$s_boardIndex$ === void 0 ? void 0 : _boards$s_boardIndex$.findIndex(item => item.id === cid);\n    if (s_cardIndex < 0) return;\n    t_boardIndex = boards.findIndex(item => item.id === targetCard.bid);\n    if (t_boardIndex < 0) return;\n    t_cardIndex = (_boards$t_boardIndex = boards[t_boardIndex]) === null || _boards$t_boardIndex === void 0 ? void 0 : (_boards$t_boardIndex$ = _boards$t_boardIndex.cards) === null || _boards$t_boardIndex$ === void 0 ? void 0 : _boards$t_boardIndex$.findIndex(item => item.id === targetCard.cid);\n    if (t_cardIndex < 0) return;\n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\n    tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\n    tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\n    setBoards(tempBoards);\n    setTargetCard({\n      bid: \"\",\n      cid: \"\"\n    });\n  };\n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({\n      bid,\n      cid\n    });\n  };\n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex(item => item.id === bid);\n    if (index < 0) return;\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n    const cardIndex = cards.findIndex(item => item.id === cid);\n    if (cardIndex < 0) return;\n    tempBoards[index].cards[cardIndex] = card;\n    setBoards(tempBoards);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\n  }, [boards]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, \"Kanban Board\"), /*#__PURE__*/React.createElement(CustomDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, \"lasd\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, \"Users:\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, JSON.stringify(users, null, 2))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, \"Grouped Tickets by User:\"), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, JSON.stringify(groupedUserTickets, null, 2))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CustomDropdown, {\n    onGroupingChange: handleGroupingChange,\n    onOrderingChange: handleOrderingChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, \"Selected Grouping: \", selectedGrouping), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, \"Selected Ordering: \", selectedOrdering)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_boards_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_boards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, boards.map(item => /*#__PURE__*/React.createElement(Board, {\n    key: item.id,\n    board: item,\n    addCard: addCardHandler,\n    removeBoard: () => removeBoard(item.id),\n    removeCard: removeCard,\n    dragEnded: dragEnded,\n    dragEntered: dragEntered,\n    updateCard: updateCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  })), Object.keys(groupedUserTickets).map(boardKey => /*#__PURE__*/React.createElement(Board, {\n    key: boardKey // Assuming boardKey is unique\n    ,\n    board: {\n      id: boardKey,\n      // Assuming id should be unique\n      title: boardKey,\n      cards: groupedUserTickets[boardKey]\n    },\n    addCard: addCardHandler,\n    removeBoard: () => removeBoard(boardKey),\n    removeCard: removeCard,\n    dragEnded: dragEnded,\n    dragEntered: dragEntered,\n    updateCard: updateCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_boards_last\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, board.map((boardName, index) => /*#__PURE__*/React.createElement(Editable, {\n    key: index,\n    displayClass: \"app_boards_add-board \".concat(boardName.toLowerCase()),\n    editClass: \"app_boards_add-board_edit \".concat(boardName.toLowerCase()),\n    placeholder: \"Enter \".concat(boardName, \" Name\"),\n    text: boardName,\n    buttonText: boardName,\n    onSubmit: name => addboardHandler(name, boardName),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  })))))));\n}\n_s(App, \"4DueJmfTVV259NIA6RnhqG3uF7E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchData","Board","Editable","Edit","CustomDropdown","App","_s","boards","setBoards","JSON","parse","localStorage","getItem","board","targetCard","setTargetCard","bid","cid","tickets","setTickets","users","setUsers","groupedUserTickets","setGroupedUserTickets","then","_ref","console","log","groupedTicketsByUser","reduce","grouped","ticket","status","push","selectedGrouping","setSelectedGrouping","selectedOrdering","setSelectedOrdering","handleGroupingChange","value","handleOrderingChange","addboardHandler","name","tempBoards","id","Date","now","Math","random","title","cards","removeBoard","index","findIndex","item","splice","addCardHandler","labels","date","tasks","removeCard","cardIndex","dragEnded","_boards$s_boardIndex","_boards$s_boardIndex$","_boards$t_boardIndex","_boards$t_boardIndex$","s_boardIndex","s_cardIndex","t_boardIndex","t_cardIndex","sourceCard","dragEntered","updateCard","card","setItem","stringify","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onGroupingChange","onOrderingChange","map","key","addCard","Object","keys","boardKey","boardName","displayClass","concat","toLowerCase","editClass","placeholder","text","buttonText","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/dasam/OneDrive/Desktop/Web development/my-react-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchData } from './utils';\n\nimport Board from \"./Components/Board/Board\";\n\nimport \"./App.css\";\nimport Editable from \"./Components/Editabled/Editable\";\nimport Edit from \"./Components/Editabled/Edit\";\n\nimport CustomDropdown from \"./Components/CustomDropdown\";\n\n\n\nfunction App() {\n\n  const [boards, setBoards] = useState(\n    JSON.parse(localStorage.getItem(\"prac-kanban\")) || []\n  );\n  const board=[ 'Backlog', 'Todo', 'In progress', 'Done', 'Cancelled']\n\n  const [targetCard, setTargetCard] = useState({\n    bid: \"\",\n    cid: \"\",\n  });\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n const [groupedUserTickets, setGroupedUserTickets] = useState({\n  'Backlog': [],\n  'Todo': [],\n  'In progress': [],\n  'Done': [],\n  'Cancelled': [],\n});\n\n  useEffect(() => {\n    fetchData().then(({ tickets, users }) => {\n      console.log(\"Tickets:\", tickets);\n      console.log(\"Users:\", users);\n      setTickets(tickets);\n      setUsers(users);\n  \n      // Group tickets by user\n      const groupedTicketsByUser = tickets.reduce((grouped, ticket) => {\n        const status = ticket.status;\n        if (!grouped[status]) {\n          grouped[status] = [];\n        }\n        grouped[status].push(ticket);\n        return grouped;\n      }, {});\n      setGroupedUserTickets(groupedTicketsByUser);\n    });\n  }, []);\n  const [selectedGrouping, setSelectedGrouping] = useState('');\n  const [selectedOrdering, setSelectedOrdering] = useState('');\n\n  const handleGroupingChange = (value) => {\n    setSelectedGrouping(value);\n  };\n\n  const handleOrderingChange = (value) => {\n    setSelectedOrdering(value);\n  };\n\n  const addboardHandler = (name) => {\n    const tempBoards = [...boards];\n    tempBoards.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: [],\n    });\n    setBoards(tempBoards);\n  };\n\n\n  const removeBoard = (id) => {\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    tempBoards.splice(index, 1);\n    setBoards(tempBoards);\n  };\n\n  const addCardHandler = (id, title) => {\n    const index = boards.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    tempBoards[index].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: [],\n    });\n    setBoards(tempBoards);\n  };\n\n  const removeCard = (bid, cid) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoards);\n  };\n\n  const dragEnded = (bid, cid) => {\n    let s_boardIndex, s_cardIndex, t_boardIndex, t_cardIndex;\n    s_boardIndex = boards.findIndex((item) => item.id === bid);\n    if (s_boardIndex < 0) return;\n\n    s_cardIndex = boards[s_boardIndex]?.cards?.findIndex(\n      (item) => item.id === cid\n    );\n    if (s_cardIndex < 0) return;\n\n    t_boardIndex = boards.findIndex((item) => item.id === targetCard.bid);\n    if (t_boardIndex < 0) return;\n\n    t_cardIndex = boards[t_boardIndex]?.cards?.findIndex(\n      (item) => item.id === targetCard.cid\n    );\n    if (t_cardIndex < 0) return;\n\n    const tempBoards = [...boards];\n    const sourceCard = tempBoards[s_boardIndex].cards[s_cardIndex];\n    tempBoards[s_boardIndex].cards.splice(s_cardIndex, 1);\n    tempBoards[t_boardIndex].cards.splice(t_cardIndex, 0, sourceCard);\n    setBoards(tempBoards);\n\n    setTargetCard({\n      bid: \"\",\n      cid: \"\",\n    });\n  };\n\n  const dragEntered = (bid, cid) => {\n    if (targetCard.cid === cid) return;\n    setTargetCard({\n      bid,\n      cid,\n    });\n  };\n\n  const updateCard = (bid, cid, card) => {\n    const index = boards.findIndex((item) => item.id === bid);\n    if (index < 0) return;\n\n    const tempBoards = [...boards];\n    const cards = tempBoards[index].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cid);\n    if (cardIndex < 0) return;\n\n    tempBoards[index].cards[cardIndex] = card;\n\n    setBoards(tempBoards);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"prac-kanban\", JSON.stringify(boards));\n  }, [boards]);\n\n  return (\n    <div className=\"app\">\n  <div className=\"app_nav\">\n    <h1>Kanban Board</h1>\n    <CustomDropdown/>\n    <h2>lasd</h2>\n    {/* Display tickets and users data here */}\n    <div>\n      <div>\n        <h3>Users:</h3>\n        <pre>{JSON.stringify(users, null, 2)}</pre>\n      </div>\n      <div>\n        <h3>Grouped Tickets by User:</h3>\n        <pre>{JSON.stringify(groupedUserTickets, null, 2)}</pre>\n      </div>\n      <div>\n      {/* Other components */}\n      <CustomDropdown\n        onGroupingChange={handleGroupingChange}\n        onOrderingChange={handleOrderingChange}\n      />\n      <div>\n        <h3>Selected Grouping: {selectedGrouping}</h3>\n        <h3>Selected Ordering: {selectedOrdering}</h3>\n      </div>\n    </div>\n    </div>\n    <div className=\"app_boards_container\">\n      <div className=\"app_boards\">\n        {boards.map((item) => (\n          <Board\n            key={item.id}\n            board={item}\n            addCard={addCardHandler}\n            removeBoard={() => removeBoard(item.id)}\n            removeCard={removeCard}\n            dragEnded={dragEnded}\n            dragEntered={dragEntered}\n            updateCard={updateCard}\n          />\n        ))}\n          {Object.keys(groupedUserTickets).map((boardKey) => (\n    <Board\n      key={boardKey} // Assuming boardKey is unique\n      board={{\n        id: boardKey, // Assuming id should be unique\n        title: boardKey,\n        cards: groupedUserTickets[boardKey],\n      }}\n      addCard={addCardHandler}\n      removeBoard={() => removeBoard(boardKey)}\n      removeCard={removeCard}\n      dragEnded={dragEnded}\n      dragEntered={dragEntered}\n      updateCard={updateCard}\n    />\n  ))}\n        <div className=\"app_boards_last\">\n        {board.map((boardName, index) => (\n        <Editable\n          key={index}\n          displayClass={`app_boards_add-board ${boardName.toLowerCase()}`}\n          editClass={`app_boards_add-board_edit ${boardName.toLowerCase()}`}\n          placeholder={`Enter ${boardName} Name`}\n          text={boardName}\n          buttonText={boardName}\n          onSubmit={(name) => addboardHandler(name, boardName)}\n        />\n      ))}\n       \n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}