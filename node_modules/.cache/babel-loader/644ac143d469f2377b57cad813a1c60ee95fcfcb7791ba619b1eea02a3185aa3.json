{"ast":null,"code":"export const fetchData = async () => {\n  try {\n    const response = await fetch(\"https://api.quicksell.co/v1/internal/frontend-assignment\");\n    if (!response.ok) {\n      throw new Error(\"HTTP error! Status: \".concat(response.status));\n    }\n    const data = await response.json();\n    return data; // Assuming the API returns an array of tickets\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    return [];\n  }\n};\nexport const groupAndSortTickets = (data, groupBy, sortBy) => {\n  if (!data || !Array.isArray(data)) {\n    return [];\n  }\n\n  // Grouping\n  let groupedData = [];\n  if (groupBy === \"status\") {\n    groupedData = groupByStatus(data);\n  } else if (groupBy === \"user\") {\n    groupedData = groupByUser(data);\n  } else if (groupBy === \"priority\") {\n    groupedData = groupByPriority(data);\n  }\n\n  // Sorting\n  if (sortBy === \"priority\") {\n    groupedData = sortByPriority(groupedData);\n  } else if (sortBy === \"title\") {\n    groupedData = sortByTitle(groupedData);\n  }\n  return groupedData;\n};\nconst groupByStatus = data => {\n  const groupedData = {};\n  data.forEach(ticket => {\n    const status = ticket.status || \"No Status\";\n    if (!groupedData[status]) {\n      groupedData[status] = [];\n    }\n    groupedData[status].push(ticket);\n  });\n  return convertObjectToArray(groupedData);\n};\nconst groupByUser = data => {\n  const groupedData = {};\n  data.forEach(ticket => {\n    const user = ticket.user || \"No User\";\n    if (!groupedData[user]) {\n      groupedData[user] = [];\n    }\n    groupedData[user].push(ticket);\n  });\n  return convertObjectToArray(groupedData);\n};\nconst groupByPriority = data => {\n  const groupedData = {};\n  data.forEach(ticket => {\n    const priority = ticket.priority || \"No Priority\";\n    if (!groupedData[priority]) {\n      groupedData[priority] = [];\n    }\n    groupedData[priority].push(ticket);\n  });\n  return convertObjectToArray(groupedData);\n};\nconst sortByPriority = groupedData => {\n  return groupedData.map(group => {\n    group.items.sort((a, b) => b.priority - a.priority);\n    return group;\n  });\n};\nconst sortByTitle = groupedData => {\n  return groupedData.map(group => {\n    group.items.sort((a, b) => a.title.localeCompare(b.title));\n    return group;\n  });\n};\nconst convertObjectToArray = object => {\n  return Object.keys(object).map(key => ({\n    group: key,\n    items: object[key]\n  }));\n};","map":{"version":3,"names":["fetchData","response","fetch","ok","Error","concat","status","data","json","error","console","groupAndSortTickets","groupBy","sortBy","Array","isArray","groupedData","groupByStatus","groupByUser","groupByPriority","sortByPriority","sortByTitle","forEach","ticket","push","convertObjectToArray","user","priority","map","group","items","sort","a","b","title","localeCompare","object","Object","keys","key"],"sources":["C:/Users/dasam/OneDrive/Desktop/Web development/my-react-app/src/Components/utils.js"],"sourcesContent":["export const fetchData = async () => {\r\n  try {\r\n    const response = await fetch(\"https://api.quicksell.co/v1/internal/frontend-assignment\");\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data; // Assuming the API returns an array of tickets\r\n  } catch (error) {\r\n    console.error(\"Error fetching data:\", error);\r\n    return [];\r\n  }\r\n};\r\nexport const groupAndSortTickets = (data, groupBy, sortBy) => {\r\n  if (!data || !Array.isArray(data)) {\r\n    return [];\r\n  }\r\n\r\n  // Grouping\r\n  let groupedData = [];\r\n  if (groupBy === \"status\") {\r\n    groupedData = groupByStatus(data);\r\n  } else if (groupBy === \"user\") {\r\n    groupedData = groupByUser(data);\r\n  } else if (groupBy === \"priority\") {\r\n    groupedData = groupByPriority(data);\r\n  }\r\n\r\n  // Sorting\r\n  if (sortBy === \"priority\") {\r\n    groupedData = sortByPriority(groupedData);\r\n  } else if (sortBy === \"title\") {\r\n    groupedData = sortByTitle(groupedData);\r\n  }\r\n\r\n  return groupedData;\r\n};\r\n\r\nconst groupByStatus = (data) => {\r\n  const groupedData = {};\r\n  data.forEach((ticket) => {\r\n    const status = ticket.status || \"No Status\";\r\n    if (!groupedData[status]) {\r\n      groupedData[status] = [];\r\n    }\r\n    groupedData[status].push(ticket);\r\n  });\r\n  return convertObjectToArray(groupedData);\r\n};\r\n\r\nconst groupByUser = (data) => {\r\n  const groupedData = {};\r\n  data.forEach((ticket) => {\r\n    const user = ticket.user || \"No User\";\r\n    if (!groupedData[user]) {\r\n      groupedData[user] = [];\r\n    }\r\n    groupedData[user].push(ticket);\r\n  });\r\n  return convertObjectToArray(groupedData);\r\n};\r\n\r\nconst groupByPriority = (data) => {\r\n  const groupedData = {};\r\n  data.forEach((ticket) => {\r\n    const priority = ticket.priority || \"No Priority\";\r\n    if (!groupedData[priority]) {\r\n      groupedData[priority] = [];\r\n    }\r\n    groupedData[priority].push(ticket);\r\n  });\r\n  return convertObjectToArray(groupedData);\r\n};\r\n\r\nconst sortByPriority = (groupedData) => {\r\n  return groupedData.map((group) => {\r\n    group.items.sort((a, b) => b.priority - a.priority);\r\n    return group;\r\n  });\r\n};\r\n\r\nconst sortByTitle = (groupedData) => {\r\n  return groupedData.map((group) => {\r\n    group.items.sort((a, b) => a.title.localeCompare(b.title));\r\n    return group;\r\n  });\r\n};\r\n\r\nconst convertObjectToArray = (object) => {\r\n  return Object.keys(object).map((key) => ({\r\n    group: key,\r\n    items: object[key],\r\n  }));\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}