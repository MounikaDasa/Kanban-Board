{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dasam\\\\OneDrive\\\\Desktop\\\\Web development\\\\my-react-app\\\\src\\\\Components\\\\Editabled\\\\Editable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { X } from \"react-feather\";\nimport \"./Editable.css\";\nfunction Editable(props) {\n  _s();\n  const [isEditable, setIsEditable] = useState(false);\n  const [inputText, setInputText] = useState(props.defaultValue || \"\");\n  const submission = e => {\n    e.preventDefault();\n    if (inputText && props.onSubmit) {\n      setInputText(\"\");\n      props.onSubmit(inputText);\n    }\n    setIsEditable(false);\n  };\n  const renderDisplay = () => {\n    if (Array.isArray(props.text)) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"editable_display_array\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, props.text.map((item, index) => /*#__PURE__*/React.createElement(\"p\", {\n        key: index,\n        className: \"editable_display \".concat(props.displayClass ? props.displayClass : \"\"),\n        onClick: () => setIsEditable(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, item)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"editable_display \".concat(props.displayClass ? props.displayClass : \"\"),\n        onClick: () => setIsEditable(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, props.text);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, isEditable ? /*#__PURE__*/React.createElement(\"form\", {\n    className: \"editable_edit \".concat(props.editClass ? props.editClass : \"\"),\n    onSubmit: submission,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, Array.isArray(props.text) ? props.text.map((item, index) => /*#__PURE__*/React.createElement(\"input\", {\n    key: index,\n    type: \"text\",\n    value: item,\n    placeholder: props.placeholder || props.text,\n    onChange: event => setInputText(event.target.value),\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: inputText,\n    placeholder: props.placeholder || props.text,\n    onChange: event => setInputText(event.target.value),\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editable_edit_footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, props.buttonText || \"Add\"), /*#__PURE__*/React.createElement(X, {\n    onClick: () => setIsEditable(false),\n    className: \"closeIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }))) : renderDisplay());\n}\n_s(Editable, \"UY2Hqm+K8HZhaVdExiLswsgXfP4=\");\n_c = Editable;\nexport default Editable;\nvar _c;\n$RefreshReg$(_c, \"Editable\");","map":{"version":3,"names":["React","useState","X","Editable","props","_s","isEditable","setIsEditable","inputText","setInputText","defaultValue","submission","e","preventDefault","onSubmit","renderDisplay","Array","isArray","text","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","key","concat","displayClass","onClick","editClass","type","value","placeholder","onChange","event","target","autoFocus","buttonText","_c","$RefreshReg$"],"sources":["C:/Users/dasam/OneDrive/Desktop/Web development/my-react-app/src/Components/Editabled/Editable.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { X } from \"react-feather\";\nimport \"./Editable.css\";\n\nfunction Editable(props) {\n  const [isEditable, setIsEditable] = useState(false);\n  const [inputText, setInputText] = useState(props.defaultValue || \"\");\n\n  const submission = (e) => {\n    e.preventDefault();\n    if (inputText && props.onSubmit) {\n      setInputText(\"\");\n      props.onSubmit(inputText);\n    }\n    setIsEditable(false);\n  };\n\n  const renderDisplay = () => {\n    if (Array.isArray(props.text)) {\n      return (\n        <div className=\"editable_display_array\">\n          {props.text.map((item, index) => (\n            <p\n              key={index}\n              className={`editable_display ${\n                props.displayClass ? props.displayClass : \"\"\n              }`}\n              onClick={() => setIsEditable(true)}\n            >\n              {item}\n            </p>\n          ))}\n        </div>\n      );\n    } else {\n      return (\n        <p\n          className={`editable_display ${\n            props.displayClass ? props.displayClass : \"\"\n          }`}\n          onClick={() => setIsEditable(true)}\n        >\n          {props.text}\n        </p>\n      );\n    }\n  };\n\n  return (\n    <div className=\"editable\">\n      {isEditable ? (\n        <form\n          className={`editable_edit ${props.editClass ? props.editClass : \"\"}`}\n          onSubmit={submission}\n        >\n          {Array.isArray(props.text) ? (\n            props.text.map((item, index) => (\n              <input\n                key={index}\n                type=\"text\"\n                value={item}\n                placeholder={props.placeholder || props.text}\n                onChange={(event) => setInputText(event.target.value)}\n                autoFocus\n              />\n            ))\n          ) : (\n            <input\n              type=\"text\"\n              value={inputText}\n              placeholder={props.placeholder || props.text}\n              onChange={(event) => setInputText(event.target.value)}\n              autoFocus\n            />\n          )}\n          <div className=\"editable_edit_footer\">\n            <button type=\"submit\">{props.buttonText || \"Add\"}</button>\n            <X onClick={() => setIsEditable(false)} className=\"closeIcon\" />\n          </div>\n        </form>\n      ) : (\n        renderDisplay()\n      )}\n    </div>\n  );\n}\n\nexport default Editable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}